@model PetFriends.Models.Adocao
@{
    ViewData["Title"] = "Criar Perfil do Pet";
}
<h2>@ViewData["Title"]</h2>

<head>
    <link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/x-editable/1.3.0/inputs/date/bootstrap-datepicker/js/locales/bootstrap-datepicker.pt-BR.js"></script>

</head>

<body>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal" style="font-size:12px;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="form-group" style="width: 100%;">
                <div class="form-control pb-2" style="float:right;">                    
                    <div class="container" id="section1">
                        <div class="row" style="font-size:12px;">
                           @* <div class="form-group col-md-4 pb-2">
                                @Html.LabelFor(model => model.IdAnimal, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group" id="grupoTipoAnimal" style="font-size:12px;">
                                    <button type="button" class="btn btn-primary" id="btnEditTipoAnimal" style="font-size:12px;" onclick="@("window.location.href='" + @Url.Action("Index", "TipoAnimal") + "'");">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                        </svg>
                                    </button>
                                    @Html.DropDownListFor(model => model.IdAnimal, new SelectList(ViewBag.IdAnimal, "Id", "Nome"), "Pet...", htmlAttributes: new { @class = "form-control tipo-select", @id = "TipoAnimal", @data_val = "true", @required = "required", @placeholder = "Gênero aqui..." })
                                </div>
                                @Html.ValidationMessageFor(model => model.IdAnimal, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4 pb-2">
                                @Html.LabelFor(model => model.IdAdotante, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group" id="grupoTipoAnimal" style="font-size:12px;">
                                    <button type="button" class="btn btn-primary" id="btnEditTipoAnimal" style="font-size:12px;" onclick="@("window.location.href='" + @Url.Action("Index", "TipoAnimal") + "'");">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                        </svg>
                                    </button>
                                    @Html.DropDownListFor(model => model.IdAdotante, new SelectList(ViewBag.IdAnimal, "Id", "NomeCompleto"), "Adotante...", htmlAttributes: new { @class = "form-control tipo-select", @id = "TipoAnimal", @data_val = "true", @required = "required", @placeholder = "Gênero aqui..." })
                                </div>
                                @Html.ValidationMessageFor(model => model.IdAdotante, "", new { @class = "text-danger" })
                            </div>*@
                            <div class="form-group col-md-4 pb-2">
                                @Html.LabelFor(model => model.IdAnimal, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.IdAnimal, new { htmlAttributes = new { @class = "form-control", @id = "Nome", @data_val = "true", @required = "required", @placeholder = "Nome do Pet aqui...", @oninvalid = "this.setCustomValidity('Favor digitar o nome do pet aqui...')" } })
                                @Html.ValidationMessageFor(model => model.IdAnimal, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4 pb-2">
                                @Html.LabelFor(model => model.IdAdotante, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.IdAdotante, new { htmlAttributes = new { @class = "form-control", @id = "Nome", @data_val = "true", @required = "required", @placeholder = "Nome do Pet aqui...", @oninvalid = "this.setCustomValidity('Favor digitar o nome do pet aqui...')" } })
                                @Html.ValidationMessageFor(model => model.IdAdotante, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-4 pb-2">
                                @Html.LabelFor(model => model.MotivoAdocao, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.MotivoAdocao, new { htmlAttributes = new { @class = "form-control", @id = "Nome", @data_val = "true", @required = "required", @placeholder = "Nome do Pet aqui...", @oninvalid = "this.setCustomValidity('Favor digitar o nome do pet aqui...')" } })
                                @Html.ValidationMessageFor(model => model.MotivoAdocao, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4  pb-2">
                                @Html.LabelFor(model => model.Termo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Termo, new { htmlAttributes = new { @class = "form-control", @id = "NomeFinal", @placeholder = "Nome Final do Pet aqui..." } })
                                @Html.ValidationMessageFor(model => model.Termo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-1  pb-2">
                                @Html.LabelFor(model => model.DilvulgacaoGrupoApoiadores, htmlAttributes: new { @class = "control-label" })
                                @Html.CheckBoxFor(model => model.DilvulgacaoGrupoApoiadores, new { @id = "Adestravel", @title = "Sim/Não", @data_toggle = "toggle", @data_on = "Sim", @data_off = "Não", @data_onstyle = "success", @data_offstyle = "danger" })
                                @Html.ValidationMessageFor(model => model.DilvulgacaoGrupoApoiadores, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-2 pb-2">
                                @Html.LabelFor(model => model.DataAdocao, htmlAttributes: new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataAdocao, new { @type = "date", @class = "form-control datepicker", @id = "DataResgate" })
                                @Html.ValidationMessageFor(model => model.DataAdocao, "", new { @class = "invalid-feedback" }) 
                            </div>

                            <div class="form-group col-md-2 pb-2">
                                @Html.LabelFor(model => model.DataCadastro, htmlAttributes: new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DataCadastro, new { @type = "date", @class = "form-control datepicker", @id = "DataResgate" })
                                @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "invalid-feedback" }) 
                            </div>
                            <div class="form-group col-md-1  pb-2">
                                @Html.LabelFor(model => model.AdocaoConcluida, htmlAttributes: new { @class = "control-label" })
                                @Html.CheckBoxFor(model => model.AdocaoConcluida, new { @id = "Adestravel", @title = "Sim/Não", @data_toggle = "toggle", @data_on = "Sim", @data_off = "Não", @data_onstyle = "success", @data_offstyle = "danger" })
                                @Html.ValidationMessageFor(model => model.AdocaoConcluida, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>                    
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-12 mb-3">
                    <button type="submit" class="btn btn-primary btn-sm" style="background-color: #de7f02; color: white; margin-top: 10px; border:none">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy-fill" viewBox="0 0 16 16">
                          <path d="M0 1.5A1.5 1.5 0 0 1 1.5 0H3v5.5A1.5 1.5 0 0 0 4.5 7h7A1.5 1.5 0 0 0 13 5.5V0h.086a1.5 1.5 0 0 1 1.06.44l1.415 1.414A1.5 1.5 0 0 1 16 2.914V14.5a1.5 1.5 0 0 1-1.5 1.5H14v-5.5A1.5 1.5 0 0 0 12.5 9h-9A1.5 1.5 0 0 0 2 10.5V16h-.5A1.5 1.5 0 0 1 0 14.5z"/>
                          <path d="M3 16h10v-5.5a.5.5 0 0 0-.5-.5h-9a.5.5 0 0 0-.5.5zm9-16H4v5.5a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5zM9 1h2v4H9z"/>
                        </svg>
                        SALVAR
                    </button>
                </div>
            </div>
        </div>

    }

    <p>
        @Html.ActionLink("Voltar para lista", "Index")
    </p>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>

    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

</body>
