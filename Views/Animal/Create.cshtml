@model PetFriends.Models.Animal
@{
    ViewData["Title"] = "Criar Perfil do Pet";
}
<div style="font-size:20px;">@ViewData["Title"]</div>

<head>
    <link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
</head>

<body>
@using (Html.BeginForm())
{
    <div class="form-horizontal" style="font-size:12px;">
        <div class="form-group" style="width: 100%;">
            <div class="form-control pb-0" style="float:right;">
                <div class="row" style="width: 100%;">
                    <div class="form-group col-md-4 pb-0 was-validated">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })                    
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @data_val="true", @required="required",@placeholder="Nome do Pet aqui...",@oninvalid="this.setCustomValidity('Favor digitar o nome do pet aqui...')" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "invalid-feedback" }) 
                        <div class="invalid-feedback">Campo Obrigatório</div>
                    </div>

                    <div class="col-md-4  pb-0">
                        @Html.LabelFor(model => model.NomeFinal, htmlAttributes: new { @class = "control-label" })                    
                        @Html.EditorFor(model => model.NomeFinal, new { htmlAttributes = new { @class = "form-control",@placeholder="Nome Final do Pet aqui..." } })
                        @Html.ValidationMessageFor(model => model.NomeFinal, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-3 pb-0 was-validated">
                        @Html.LabelFor(model => model.TipoAnimal, htmlAttributes: new { @class = "control-label" })  
                        @Html.DropDownListFor(model => model.TipoAnimal, new SelectList(ViewBag.IdTipoAnimal, "Id", "TipoDesc"), "Cão,Gato...", htmlAttributes: new { @class = "form-control selectpicker", @data_val="true", @required="required",@placeholder="Tipo do Pet aqui...",@oninvalid="this.setCustomValidity('Campo Obrigatório')" })
                        @Html.ValidationMessageFor(model => model.TipoAnimal, "", new { @class = "text-danger" })
                    </div>
                            
                    <div class="col-md-1  pb-0">
                        @Html.LabelFor(model => model.Adestravel, htmlAttributes: new { @class = "control-label" })                 
                        @Html.CheckBoxFor(model => model.Adestravel, new { @id = "toggleAdestrar",@title = "Sim/Não", @data_toggle = "toggle", @data_on="Sim", @data_off="Não",@data_onstyle="success", @data_offstyle="danger"})
                        @Html.ValidationMessageFor(model => model.Adestravel, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-2 pb-0 was-validated">
                        @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label" })  
                        @Html.DropDownListFor(model => model.Genero, new SelectList(ViewBag.IdGenero, "Id", "GeneroDesc"), "F/M", htmlAttributes: new { @class = "form-control selectpicker", @data_val="true", @required="required",@placeholder="Tipo do Pet aqui...",@oninvalid="this.setCustomValidity('Campo Obrigatório')" })
                        @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                    </div>  

                    <div class="form-group col-md-2 pb-0 was-validated">
                        @Html.LabelFor(model => model.Porte, htmlAttributes: new { @class = "control-label" })  
                        @Html.DropDownListFor(model => model.Porte, new SelectList(ViewBag.IdPorte, "Id", "PorteDesc"), "P/M/G...", htmlAttributes: new { @class = "form-control selectpicker", @data_val="true", @required="required",@placeholder="Tipo do Pet aqui...",@oninvalid="this.setCustomValidity('Campo Obrigatório')" })
                        @Html.ValidationMessageFor(model => model.Porte, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2 pb-0">
                        @Html.LabelFor(model => model.IdadeAnos, htmlAttributes: new { @class = "control-label" })                    
                        @Html.EditorFor(model => model.IdadeAnos, new { htmlAttributes = new { @class = "form-control",@placeholder="" } })
                        @Html.ValidationMessageFor(model => model.IdadeAnos, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2 pb-0">
                        @Html.LabelFor(model => model.IdadeMeses, htmlAttributes: new { @class = "control-label" })                    
                        @Html.EditorFor(model => model.IdadeMeses, new { htmlAttributes = new { @class = "form-control",@placeholder="" } })
                        @Html.ValidationMessageFor(model => model.IdadeMeses, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2 pb-0 was-validated">
                        @Html.LabelFor(model => model.CorPelo, htmlAttributes: new { @class = "control-label" })  
                        @Html.DropDownListFor(model => model.CorPelo, new SelectList(ViewBag.IdCorPelo, "Id", "CorPeloDesc"), "P/M/G...", htmlAttributes: new { @class = "form-control selectpicker", @data_val="true", @required="required",@placeholder="Tipo do Pet aqui...",@oninvalid="this.setCustomValidity('Campo Obrigatório')" })
                        @Html.ValidationMessageFor(model => model.CorPelo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-4 pb-0 was-validated">
                        @Html.LabelFor(model => model.LarTemporario, htmlAttributes: new { @class = "control-label" })  
                        <div class="input-group" id="grupoLarTemporario" style="font-size:12px;">
                            <button type="button" class="btn btn-primary" id="btnEditLarTemporario" style="font-size:12px;" onclick="@("window.location.href='" + @Url.Action("Privacy", "Home") + "'");">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                                </svg>
                            </button>
                            @Html.DropDownListFor(model => model.LarTemporario, new SelectList(ViewBag.IdLarTemporario, "Id", "NomeLarTemporario"), "LT", htmlAttributes: new { @class = "form-control selectpicker", @data_val="true", @required="required",@placeholder="Tipo do Pet aqui...",@oninvalid="this.setCustomValidity('Campo Obrigatório')" })
                            @Html.ValidationMessageFor(model => model.LarTemporario, "", new { @class = "text-danger" })
                 
                        </div>
                    </div>  

                    <div class="form-group col-md-2 pb-0 was-validated">
                        @Html.LabelFor(model => model.DataResgate, htmlAttributes: new { @class = "control-label" })                    
                        @Html.EditorFor(model => model.DataResgate, new { htmlAttributes = new { @class = "form-control", @data_val="true", @required="required",@placeholder="dd/mm/yyyy",@oninvalid="this.setCustomValidity('Favor digitar Data Resgate aqui...')" } })
                        @Html.ValidationMessageFor(model => model.DataResgate, "", new { @class = "invalid-feedback" }) 
                        <div class="invalid-feedback">Campo Obrigatório</div>
                    </div>

                    <div class="form-group col-md-2 pb-0 was-validated">
                        @Html.LabelFor(model => model.DataCadastro, htmlAttributes: new { @class = "control-label" })                    
                        @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control", @data_val="true", @required="required",@placeholder="dd/mm/yyyy",@oninvalid="this.setCustomValidity('Favor digitar Data Resgate aqui...')" } })        
                        @Html.ValidationMessageFor(model => model.DataCadastro, "", new { @class = "invalid-feedback" }) 
                        <div class="invalid-feedback">Campo Obrigatório</div>
                    </div>

                    <div class="form-group col-md-2 pb-0">
                        @Html.LabelFor(model => model.DataDivulgacao, htmlAttributes: new { @class = "control-label" })                    
                        @Html.EditorFor(model => model.DataDivulgacao, new { htmlAttributes = new { @class = "form-control", @data_val="true", @placeholder="dd/mm/yyyy",@oninvalid="this.setCustomValidity('Favor digitar Data Resgate aqui...')" } })        
                        @Html.ValidationMessageFor(model => model.DataDivulgacao, "", new { @class = "invalid-feedback" }) 
                    </div>

           
                </div>
               
            </div>
        </div>
        <p class="form-group">
            <p class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </p>
        </p>

    </div>
}
    


<p>
    @Html.ActionLink("Back to List", "Index")
</p>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>


</body>
